#!/bin/bash
# Copyright 2014. Christian Romney
# MIT Licensed.
#
# my own homebrew external command for managing
# a list of brews and casks via state files
#
# the premise is that two files .brews and .casks
# which are version-controlled and symlinked under $HOME
# contain the list of brews and casks I want installed 
# on my machine. If I need to re-build or migrate a
# machine I can checkout my dotfiles and issue
# a single command to install all the brews and casks
# listed in these files.
#
# really it's a lightweight (read: shitty) version of 
# Chef or Puppet without installing all that sowftware
#
# commands: 
#   brew mix (brew|cask) <formula>   - adds a new brew/cask to the list
#   brew unmix (brew|cask) <formula> - removes a new brew/cask
#   brew drink                       - installs everything in the lists (that isn't already)

if [[ $# -lt 2 ]]; then
cat <<EOF
  usage: $(basename $0) (brew|cask) <formula> [options]

OPTIONS
  -i install the formula by calling brew drink

EOF
exit 0
fi

action=$(basename  $0)
command=$1
formula=$2

state=".brews"

if [[ $command = "cask" ]]; then
  state=".casks"
fi

realfile=$HOME/$(readlink $HOME/$state)

if [[ ! -f $realfile ]]; then
  echo "$command file $realfile not found"
  exit 1
fi

# Execute
if [[ $action = "brew-unmix" ]]; then
    # brew-unmix 
    
    # Remove from file
    sed -e /^$formula$/d -i '' $realfile
    
    # Remove if installed
    brew list | grep "^$formula$"
    if [[ $? -eq 0 ]]; then
      brew $command remove $formula
    fi
else
    # brew-mix
    grep -e "^$formula$" $realfile > /dev/null
    if [[ $? -eq 0 ]]; then   
        echo "$formula is already in the $command"
      exit 0
    else
        echo "$formula" >> $realfile  
        sync
        sort $realfile -o $realfile 
        uniq $realfile /tmp/$state
        mv /tmp/$state $realfile

        echo "Added $formula to the $command"
        brew drink
    fi
fi
